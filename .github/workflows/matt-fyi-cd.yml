name: matt.fyi CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  static-unit:
    name: 'Static analysis and unit tests'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/github-script@v5.0.0
        name: Get commit messages
        id: commit-messages
        with:
          script: |
            const commits = ${{ toJSON(github.event.commits.*.message) }}
            console.log('commits: ' + JSON.stringify(commits))
            return commits.map(c => /^[^\n].*/g.exec(c)[0])

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post starting to Slack
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "üéÅ Delivery started",
                    "emoji": true
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Starting tests and build"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "üëâ On Github",
                      "emoji": true
                    },
                    "value": "click_me_123",
                    "url": "${{ env.RUN_URL }}",
                    "action_id": "button-action"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "üë®‚Äçüíª Commits:\n‚Ä¢ ${{ join(fromJSON(steps.commit-messages.outputs.result), '\n ‚Ä¢') }}"
                    }
                  ]
                },
                {
                  "type": "divider"
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Use Node.js version
        uses: actions/setup-node@v2
        with:
          node-version: '14.16.1'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile --non-interactive --silent

      - name: Lint
        run: yarn lint

      - name: Unit tests
        run: yarn test:unit

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post failure to Slack
        if: failure()
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üí• *Failed:* Static analysis and unit tests. <!here>"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "Job",
                      "emoji": true
                    },
                    "value": "click_me_123",
                    "url": "${{ env.JOB_URL }}",
                    "action_id": "button-action"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          JOB_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.job }}?check_suite_focus=true

      - uses: octokit/request-action@v2.x
        id: get-job-info
        with:
          route: GET /repos/{owner}/{repo}/actions/jobs/{job_id}
          owner: mttschltz
          repo: life
          job_id: ${{ github.job }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: 'echo latest release: ${{ steps.get-job-info.outputs.data }}'

      - uses: actions/github-script@v5.0.0
        name: Get job duration
        id: get-job-duration
        with:
          script: |
            const started = new Date('2020-01-20T17:42:40Z')
            const completed = new Date('2020-01-20T17:44:39Z')
            const durationSeconds = (completed - started)/1000
            if (durationSeconds > 60) {
              const m = Math.floor(durationSeconds/60)
              const s = durationSeconds % 60
              return `${m}m${s}s`
            } else if (durationSeconds === 60) {
              return '1m'
            } else {
              return `${durationSeconds % 60}s`
            }
          result-encoding: string

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post success to Slack
        if: success()
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "‚úÖ Static analysis and unit tests..."
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Completed in ${{ steps.get-job-duration.outputs.result }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  visual-reg:
    name: 'Visual regression tests'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js version
        uses: actions/setup-node@v2
        with:
          node-version: '14.16.1'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile --non-interactive --silent

      - name: Visual regression tests
        run: yarn test:visreg

      - name: Upload visual regression screenshots
        if: failure()
        uses: actions/upload-artifact@v2.3.1
        with:
          name: screenshots
          path: .loki
          retention-days: 90 # 90 is default

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post failure to Slack
        if: failure()
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üí• *Failed:* Visual regression tests. <!here>"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "Job",
                      "emoji": true
                    },
                    "value": "click_me_123",
                    "url": "${{ env.JOB_URL }}",
                    "action_id": "button-action"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          JOB_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.job }}?check_suite_focus=true

      - uses: actions/github-script@v5.0.0
        name: Get job duration
        id: get-job-duration
        with:
          script: |
            const started = new Date('2020-01-20T17:42:40Z')
            const completed = new Date('2020-01-20T17:44:39Z')
            const durationSeconds = (completed - started)/1000
            if (durationSeconds > 60) {
              const m = Math.floor(durationSeconds/60)
              const s = durationSeconds % 60
              return `${m}m${s}s`
            } else if (durationSeconds === 60) {
              return '1m'
            } else {
              return `${durationSeconds % 60}s`
            }
          result-encoding: string

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post success to Slack
        if: success()
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "‚úÖ Visual regression tests..."
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Completed in ${{ steps.get-job-duration.outputs.result }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  build:
    name: 'Build'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js version
        uses: actions/setup-node@v2
        with:
          node-version: '14.16.1'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile --non-interactive --silent

      - name: Build
        run: yarn build:matt-fyi

      - name: Save build files
        uses: actions/upload-artifact@v2
        with:
          name: build-files
          path: app/matt-fyi/public
          retention-days: 5

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post failure to Slack
        if: failure()
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üí• *Failed:* Build. <!here>"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "Job",
                      "emoji": true
                    },
                    "value": "click_me_123",
                    "url": "${{ env.JOB_URL }}",
                    "action_id": "button-action"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          JOB_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.job }}?check_suite_focus=true

      - uses: actions/github-script@v5.0.0
        name: Get job duration
        id: get-job-duration
        with:
          script: |
            const started = new Date('2020-01-20T17:42:40Z')
            const completed = new Date('2020-01-20T17:44:39Z')
            const durationSeconds = (completed - started)/1000
            if (durationSeconds > 60) {
              const m = Math.floor(durationSeconds/60)
              const s = durationSeconds % 60
              return `${m}m${s}s`
            } else if (durationSeconds === 60) {
              return '1m'
            } else {
              return `${durationSeconds % 60}s`
            }
          result-encoding: string

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post success to Slack
        if: success()
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "‚úÖ Build..."
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Completed in ${{ steps.get-job-duration.outputs.result }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  deploy:
    name: 'Deploy to Netlify'
    runs-on: ubuntu-latest
    needs: [static-unit, visual-reg, build]
    steps:
      - uses: slackapi/slack-github-action@v1.16.0
        name: Post starting to Slack
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "‚è≥ Starting deploy to Netlify..."
                  }
                },
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Download build files
        uses: actions/download-artifact@v2
        with:
          name: build-files
          path: build-files

      - name: Deploy
        uses: netlify/actions/cli@master # TODO: tie to specific commit
        with:
          args: deploy --dir=build-files --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post failure to Slack
        if: failure()
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üí• *Failed:* Deploy to Netlify. <!here>"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "Job",
                      "emoji": true
                    },
                    "value": "click_me_123",
                    "url": "${{ env.JOB_URL }}",
                    "action_id": "button-action"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          JOB_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.job }}?check_suite_focus=true

      - uses: actions/github-script@v5.0.0
        name: Get job duration
        id: get-job-duration
        with:
          script: |
            const started = new Date('2020-01-20T17:42:40Z')
            const completed = new Date('2020-01-20T17:44:39Z')
            const durationSeconds = (completed - started)/1000
            if (durationSeconds > 60) {
              const m = Math.floor(durationSeconds/60)
              const s = durationSeconds % 60
              return `${m}m${s}s`
            } else if (durationSeconds === 60) {
              return '1m'
            } else {
              return `${durationSeconds % 60}s`
            }
          result-encoding: string

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post success to Slack
        if: success()
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üöÄ *Deployed to Netlify!*"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Completed in ${{ steps.get-job-duration.outputs.result }}"
                    }
                  ]
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "*Total deployment in ${{ steps.get-job-duration.outputs.result }}*"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
