# Job duration - Currently not possible to get easily due to this limitation: https://github.community/t/job-id-is-string-in-github-job-but-integer-in-actions-api/139060
name: matt.fyi CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  static-unit:
    name: 'Static analysis and unit tests'
    runs-on: ubuntu-latest
    outputs:
      start-time: ${{ steps.start-time.outputs.result }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/github-script@v5.0.0
        name: Get start time
        id: start-time
        with:
          script: |
            return new Date().getTime()
          result-encoding: string

      - uses: actions/github-script@v5.0.0
        name: Get commit messages
        id: commit-messages
        with:
          script: |
            const commits = ${{ toJSON(github.event.commits.*.message) }}
            console.log('commits: ' + JSON.stringify(commits))
            return commits.map(c => /^[^\n].*/g.exec(c)[0])

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post starting to Slack
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "text": "🎁 Delivery started",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "🎁 Delivery started",
                    "emoji": true
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text":  {
                    "type": "mrkdwn",
                    "text": "• ${{ join(fromJSON(steps.commit-messages.outputs.result), '\n •') }}"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Tests and build started"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "👉 On Github",
                      "emoji": true
                    },
                    "value": "click_me_123",
                    "url": "${{ env.RUN_URL }}",
                    "action_id": "button-action"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Use Node.js version
        uses: actions/setup-node@v2
        with:
          node-version: '14.16.1'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile --non-interactive --silent

      - name: Lint
        run: yarn lint

      - name: Unit tests
        run: yarn test:unit

      - uses: actions/github-script@v5.0.0
        name: Get job duration
        id: get-job-duration
        with:
          script: |
            const started = new Date(${{ steps.start-time.outputs.result }})
            const completed = new Date()
            const durationSeconds = Math.floor((completed - started)/1000)
            if (durationSeconds > 60) {
              const m = Math.floor(durationSeconds/60)
              const s = durationSeconds % 60
              return `${m}m${s}s`
            } else if (durationSeconds === 60) {
              return '1m'
            } else {
              return `${durationSeconds % 60}s`
            }
          result-encoding: string

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post success to Slack
        if: success()
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "text": "✔ Static analysis and unit tests completed",
              "blocks": [
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "✔ Static analysis and unit tests completed in ${{ steps.get-job-duration.outputs.result }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post failure to Slack
        if: failure()
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "text": "💥 Static analysis and unit tests failed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "💥 Static analysis and unit tests *failed*. <!here>"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "View",
                      "emoji": true
                    },
                    "value": "click_me_123",
                    "url": "${{ env.RUN_URL }}",
                    "action_id": "button-action"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

  visual-reg:
    name: 'Visual regression tests'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/github-script@v5.0.0
        name: Get start time
        id: start-time
        with:
          script: |
            return new Date().getTime()
          result-encoding: string

      - name: Use Node.js version
        uses: actions/setup-node@v2
        with:
          node-version: '14.16.1'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile --non-interactive --silent

      - name: Visual regression tests
        run: yarn test:visreg

      - name: Upload visual regression screenshots
        if: failure()
        uses: actions/upload-artifact@v2.3.1
        with:
          name: screenshots
          path: .loki
          retention-days: 90 # 90 is default

      - uses: actions/github-script@v5.0.0
        name: Get job duration
        id: get-job-duration
        with:
          script: |
            const started = new Date(${{ steps.start-time.outputs.result }})
            const completed = new Date()
            const durationSeconds = Math.floor((completed - started)/1000)
            if (durationSeconds > 60) {
              const m = Math.floor(durationSeconds/60)
              const s = durationSeconds % 60
              return `${m}m${s}s`
            } else if (durationSeconds === 60) {
              return '1m'
            } else {
              return `${durationSeconds % 60}s`
            }
          result-encoding: string

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post success to Slack
        if: success()
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "text": "✔ Visual regression tests completed",
              "blocks": [
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "✔ Visual regression tests completed in ${{ steps.get-job-duration.outputs.result }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post failure to Slack
        if: failure()
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "text": "💥 Visual regression tests failed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "💥 Visual regression tests *failed*. <!here>"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "View",
                      "emoji": true
                    },
                    "value": "click_me_123",
                    "url": "${{ env.RUN_URL }}",
                    "action_id": "button-action"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

  build:
    name: 'Build'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/github-script@v5.0.0
        name: Get start time
        id: start-time
        with:
          script: |
            return new Date().getTime()
          result-encoding: string

      - name: Use Node.js version
        uses: actions/setup-node@v2
        with:
          node-version: '14.16.1'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile --non-interactive --silent

      - name: Build
        run: yarn build:matt-fyi

      - name: Save build files
        uses: actions/upload-artifact@v2
        with:
          name: build-files
          path: app/matt-fyi/public
          retention-days: 5

      - uses: actions/github-script@v5.0.0
        name: Get job duration
        id: get-job-duration
        with:
          script: |
            const started = new Date(${{ steps.start-time.outputs.result }})
            const completed = new Date()
            const durationSeconds = Math.floor((completed - started)/1000)
            if (durationSeconds > 60) {
              const m = Math.floor(durationSeconds/60)
              const s = durationSeconds % 60
              return `${m}m${s}s`
            } else if (durationSeconds === 60) {
              return '1m'
            } else {
              return `${durationSeconds % 60}s`
            }
          result-encoding: string

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post success to Slack
        if: success()
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "text": "✔ Build completed",
              "blocks": [
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "✔ Build completed in ${{ steps.get-job-duration.outputs.result }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post failure to Slack
        if: failure()
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "text": "💥 Build failed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "💥 Build *failed*. <!here>"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "View",
                      "emoji": true
                    },
                    "value": "click_me_123",
                    "url": "${{ env.RUN_URL }}",
                    "action_id": "button-action"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

  deploy-prepare:
    name: 'Prepare deploying to Netlify'
    runs-on: ubuntu-latest
    needs: [static-unit, visual-reg, build]
    outputs:
      workflow-start-time: ${{ needs.static-unit.outputs.start-time }}
      start-time: ${{ steps.start-time.outputs.result }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/github-script@v5.0.0
        name: Get start time
        id: start-time
        with:
          script: |
            return new Date().getTime()
          result-encoding: string

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post starting to Slack
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "text": "⏳ Deploy to Netlify starting",
              "blocks": [
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "⏳ Deploy to Netlify starting"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  deploy:
    name: 'Deploy to Netlify'
    runs-on: ubuntu-latest
    needs: [deploy-prepare]
    steps:
      # Calculating start time here doesn't help as almost all the job duration comes from building
      # netlify/actions/cli@master and this is hoisted to the start of the job.
      # It could be done with a dependent job that runs first.

      - name: Download build files
        uses: actions/download-artifact@v2
        with:
          name: build-files
          path: build-files

      - name: Deploy
        uses: netlify/actions/cli@master # TODO: tie to specific commit
        with:
          args: deploy --dir=build-files --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - uses: actions/github-script@v5.0.0
        name: Get job duration
        id: get-job-duration
        with:
          script: |
            const started = new Date(${{ needs.deploy-prepare.outputs.start-time }})
            const completed = new Date()
            const durationSeconds = Math.floor((completed - started)/1000)
            if (durationSeconds > 60) {
              const m = Math.floor(durationSeconds/60)
              const s = durationSeconds % 60
              return `${m}m${s}s`
            } else if (durationSeconds === 60) {
              return '1m'
            } else {
              return `${durationSeconds % 60}s`
            }
          result-encoding: string

      - uses: actions/github-script@v5.0.0
        name: Get workflow duration
        id: get-workflow-duration
        with:
          script: |
            const started = new Date(${{ needs.deploy-prepare.outputs.workflow-start-time }})
            const completed = new Date()
            const durationSeconds = Math.floor((completed - started)/1000)
            if (durationSeconds > 60) {
              const m = Math.floor(durationSeconds/60)
              const s = durationSeconds % 60
              return `${m}m${s}s`
            } else if (durationSeconds === 60) {
              return '1m'
            } else {
              return `${durationSeconds % 60}s`
            }
          result-encoding: string

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post success to Slack
        if: success()
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "text": "🚀 Delivered to Netlify!",
              "blocks": [
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "✔ Deploy to Netlify completed in ${{ steps.get-job-duration.outputs.result }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "🚀 *Delivered to Netlify* in ${{ steps.get-workflow-duration.outputs.result }}!"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - uses: slackapi/slack-github-action@v1.16.0
        name: Post failure to Slack
        if: failure()
        with:
          channel-id: 'C01CTC53XGT' # #deploys-matt-fyi
          payload: |
            {
              "text": "💥 Deploy to Netlify failed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "💥 Deploy to Netlify *failed*. <!here>"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "View",
                      "emoji": true
                    },
                    "value": "click_me_123",
                    "url": "${{ env.RUN_URL }}",
                    "action_id": "button-action"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          RUN_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
