{
	// Place your life workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Given-When-Then": {
		"scope": "javascript,typescript",
		"prefix": "test-gwt",
		"body": [
			"describe('Given $1', () => {",
			"\tdescribe('When $2', () => {",
			"\t\ttest('Then $3', () => {",
			"\t\t\t$4",
			"\t\t})",
			"\t})",
			"})",
		],
		"description": "Nested Jest describe/test blocks with Given/When/Then descriptions"
	},
	"Given-Then": {
		"scope": "javascript,typescript",
		"prefix": "test-gt",
		"body": [
			"describe('Given $1', () => {",
			"\ttest('Then $2', () => {",
			"\t\t$3",
			"\t})",
			"})",
		],
		"description": "Nested Jest describe/test blocks with Given/Then descriptions"
	},
	"beforeEach": {
		"scope": "javascript,typescript",
		"prefix": "test-be",
		"body": [
			"let $1",
			"beforeEach(() => {",
			"\t$2",
			"})",
		],
		"description": "Jest beforeEach block with variable in external scope"
	},
	"Wrap describe": {
		"scope": "javascript,typescript",
		"prefix": "test-wrap-desc",
		"body": [
			"describe('$1', () => {",
			"\t$TM_SELECTED_TEXT",
			"})",
		],
		"description": "Jest describe block wrapped around selected text"
	}
}